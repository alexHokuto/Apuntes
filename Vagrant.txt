Vagrant.configure("2") do |config|
  config.vm.box = "ubuntu/xenial64"
  config.vm.network "public_network", ip: "192.168.1.5"
  config.vm.provider "virtualbox" do |v|
    v.memory = 4024
    v.cpus = 2
  end
end

Vagrant.configure("2") do |config|
  config.vm.box = "ubuntu/xenial64"
  config.vm.network "public_network", ip: "192.168.1.4"
  config.vm.define "Devops"
  config.disksize.size = '50GB'
  config.vm.provider "virtualbox" do |v|
    v.memory = 4024
    v.cpus = 2
    v.name = "jenkins"
  end
end


Linux path boxes
	/home/${usuario}/.vagrant.d/

Linux VirtualBox Path
	/home/${usuario}//VirtualBox VMs/

error
        vagrant plugin update

Ejecutar la máquina virtual:
$ vagrant up

Para entrar por SSH a la máquina no hace falta ni saber la dirección IP. Basta con un comando: y salir exit
$ vagrant ssh

Poner la máquina en estado de suspensión:
$ vagrant suspend

Si hemos suspendido la máquina pero queremos volver a ejecutarla, ejecutamos el siguiente comando:
$ vagrant resume

Para apagar la máquina:
$ vagrant halt

Para saber el estado de la máquina (apagada, ejecutándose o en modo suspensión):
$ vagrant status

Para destruir la máquina:
¡Atención! Este comando no apaga la máquina, sino que la elimina y borra todos los datos.
$ vagrant destroy        

PLUGIN
	vagrant plugin install vagrant-disksize
    vagrant plugin install vagrant-hostmanager


Instalar JAVA ubuntu

sudo add-apt-repository ppa:webupd8team/java
sudo apt-get update
sudo apt-get install oracle-java8-installer

sudo apt-get install oracle-java8-set-default

Maven
	sudo apt-get install maven
	mvn -version

Git	
	sudo apt-get install git
	git --version

Gradle
  sudo add-apt-repository ppa:cwchien/gradle
  sudo apt-get update
	sudo apt-cache search gradle

/usr/share/gradle/

ls -lhtr

Tomcat
	wget http://www-eu.apache.org/dist/tomcat/tomcat-8/v8.5.24/bin/apache-tomcat-8.5.24.tar.gz
	tar -xvzf apache-tomcat-8.5.24.tar.gz
	sudo mv apache-tomcat-8.5.24 /usr/share/
	
Editar el bashrc, me parece que no debe de haver espacios en blanco xq vota error
		vim ~/.bashrc
		export JAVA_HOME=/usr/lib/jvm/java-8-oracle/
		export CATALINA_HOME=/usr/share/apache-tomcat-8.5.24
		export CATALINA=$CATALINA_HOME/bin
    export PATH=$PATH:$CATALINA

Correr Tomcat
		./catalina.sh start
		
Ver las ultimas lineas del log
tail /usr/share/apache-tomcat-8.5.24/logs/catalina.out



-- actulizamos
vim ~/.bashrc
export JAVA_HOME=/usr/lib/jvm/java-8-oracle
export M2_HOME=/usr/share/maven
export M2=$M2_HOME/bin

export NEXUS_HOME=/usr/share/nexus
export NEXUS=$NEXUS_HOME/bin
export PATH=$PATH:$NEXUS
		
filezilla a vagrant
sftp://192.168.1.183  --ip de vagrant
vagrant               -- nombre
vagrant               -- password
port                  -- tal vez 22 o sin nada


MOVER Vagrant BOX a otra maquina

1.	Vagrant Up the ubuntu box without the 'config.ssh.insert_key = false' line (No colocar esa linea)
2.	Reset the ubuntu user's password to 'vagrant':
3.	sudo passwd ubuntu  (IMPORTANTE)
	(will prompt for password)
4.	Config your box how you want it
5. 	Package your box
6.	Then in your new boxes Vagrantfile include:
		config.ssh.username = 'ubuntu'
		config.ssh.password = 'vagrant'  (Es el password que se coloco en el punto 3)
7. 	vagrant package
8.	vagrant box add package.box --name jenkins_box
9.	Actualizar el box en la etiqueta path 
		/home/${usuario}/.vagrant.d/box.ovf
10.	vagrant init jenkins_box
11.	vagrant up


Vagrant.configure("2") do |config|
  config.vm.box = "jenkins_box"
  config.vm.network "public_network"
  config.vm.define "Devops"
  config.disksize.size = '50GB'
  config.ssh.username = 'ubuntu'
  config.ssh.password = 'vagrant'
  config.vm.provider "virtualbox" do |v|
    v.memory = 4024
    v.cpus = 2
    v.name = "jenkins"
  end
end

jenkins
	192.168.1.222:8080
		jenkins
		jenkins

		
